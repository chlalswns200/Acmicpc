n,m = map(int,input().split())
INF = int(1e9)
graph = []

def dfs(v):
  visited[v] = True
  for node, cost in graph[v]:
    if not visited[node]:
      distance[node] = min(distance[node], distance[v]+cost)
      dfs(node)    

for _ in range(n+1):
  graph.append([])

for _ in range(n-1):
  a,b,c = map(int,input().split())
  graph[a].append((b,c))
  graph[b].append((a,c))

for _ in range(m):
  a,b = map(int,input().split())
  distance = [INF]*(n+1)
  visited = [False]*(n+1)
  distance[a] = 0
  
  dfs(a)
  print(distance[b])
