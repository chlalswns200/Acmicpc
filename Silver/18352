import sys
import heapq

input = sys.stdin.readline

n,m,dist,start = map(int,input().split())

INF = int(1e9)
graph = []
for _ in range(n+1):
  graph.append([])

distance = [INF] *(n+1)

for _ in range(m):
  a,b = map(int,input().split())
  graph[a].append(b)

def dijkstra(start):
    q = []
    heapq.heappush(q, (0, start))
    distance[start] = 0

    while q:
        dist, now = heapq.heappop(q)
        if dist > distance[now]:
            continue
        for i in graph[now]:
            cost = dist + 1
            if cost < distance[i]:
                distance[i] = cost
                heapq.heappush(q, (cost, i))

dijkstra(start)


clear = False
for i in range(1, n+1):
    if distance[i] == dist:
        print(i)
        clear = True

if not clear:
    print(-1)
