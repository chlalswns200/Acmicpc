import java.util.*;

public class Main {

	static int N,M,K,cnt,val;
	static int[][] arr;
	static int[] dx= {0,0,-1,1};
	static int[] dy= {-1,1,0,0};
	 private static List<Integer> areas = new ArrayList<>();
	
	public static void main(String[] args){
	
		Scanner sc= new Scanner(System.in);
		M =sc.nextInt();
		N =sc.nextInt();
		K =sc.nextInt();
		arr= new int[M][N];
		
		for(int i=0;i<K;i++) {
			int sx=sc.nextInt();
			int sy=sc.nextInt();
			int ex=sc.nextInt();
			int ey=sc.nextInt();
			fillArr(sx,sy,ex,ey);		
		}

		for(int i=0;i<M;i++) {
			for(int j=0;j<N;j++) {
				if(arr[i][j]==0) {
					cnt ++;
					val=0;
					dfs(i,j);
					areas.add(val);
				}
			}
		}
		Collections.sort(areas);
		System.out.println(cnt);
		for(int a :areas)
			System.out.print(a+" ");
	
	}
	
	static void fillArr(int sx,int sy,int ex,int ey) {
		int startY=sx;
		int startX=M-sy;
		int endY=ex;
		int endX=M-ey;
			
		for(int i=endX;i<startX;i++) {
			for(int j=startY;j<endY;j++) {
				arr[i][j]=1;
			}
		}
	}
	
	static void dfs(int x, int y) {
		
		arr[x][y]=1;
		val++;
		
		for(int i=0;i<4;i++) {
			int nx = x+dx[i];
			int ny = y+dy[i];
			
			if(nx>=0&&ny>=0&&nx<M&&ny<N) {
				if(arr[nx][ny]==0) {
					dfs(nx,ny);	
				}
			}
			
		}
				
	}
	
}
