from collections import deque

N, M = map(int, input().split())

maps = []

for _ in range(N):
    maps.append(list(map(int, input())))

def solution(maps):
    n = len(maps)
    m = len(maps[0])
    queue = deque()
    queue.append((0, 0))
    dx = [-1, 1, 0, 0]
    dy = [0, 0, -1, 1]
    while queue:
        x, y = queue.popleft()
        for i in range(4):
            nx = dx[i] + x
            ny = dy[i] + y

            if nx<0 or ny<0 or nx>= n or ny>=m:
                continue
            if maps[nx][ny] == 0:
                continue
            if maps[nx][ny] == 1:
                maps[nx][ny] = maps[x][y] + 1
                queue.append((nx, ny))

    answer = 0
    answer = maps[n-1][m-1]
    if answer == 1:
        answer = -1

    return answer

i = solution(maps)
print(i)
