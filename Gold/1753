import heapq
import sys

input = sys.stdin.readline
INF = int(1e9)

graph = []

n,m = map(int, input().split())

for _ in range(n+1):
  graph.append([])
  
distance = [INF]*(n+1)

start = int(input())

for _ in range(m):
  s,e,c = map(int,input().split())
  graph[s].append((e,c))

        
def distra(start):
  q = []
  distance[start] = 0
  heapq.heappush(q,(0,start))
  
  while q:
    dist,now = heapq.heappop(q)
    if distance[now] < dist:
      continue
    for i in graph[now]:
      cost = i[1] + dist
      if cost < distance[i[0]]:
        distance[i[0]] = cost
        heapq.heappush(q,(cost,i[0]))

distra(start)

for i in range(1,n+1):
  if distance[i]==INF:
    print("INF")
  else:
    print(distance[i])
  
