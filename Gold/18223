import heapq
import sys

input = sys.stdin.readline
n,m,target = map(int,input().split())
INF = int(1e9)

graph = []
distance = [INF]*(n+1)

for _ in range(n+1):
  graph.append([])
  
for _ in range(m):
  a,b,c = map(int,input().split())
  graph[a].append((b,c))
  graph[b].append((a,c))

def distra(start):
  distance[start] = 0
  q = []
  heapq.heappush(q,(0,start))
  
  while q:
    dist,now = heapq.heappop(q)
    if distance[now] < dist:
      continue
    for i in graph[now]:
      cost = i[1] + dist
      if cost< distance[i[0]]:
        distance[i[0]] = cost
        heapq.heappush(q,(cost,i[0]))


distra(1)
result1 = distance[n]
result2 = distance[target]
distance = [INF]*(n+1)

distra(target)
result2 += distance[n]

if result1==result2:
  print("SAVE HIM")
else:
  print("GOOD BYE")
    
