import heapq
import sys

input = sys.stdin.readline

n = int(input())
m = int(input())

INF = int(1e9)
graph = []
distance = [INF]*(n+1)
for _ in range(n+1):
  graph.append([])


for _ in range(m):
  s,e,c = map(int,input().split())
  graph[s].append((e,c))

c,d = map(int,input().split())

def distra(start):
  q = []
  distance[start] = 0
  heapq.heappush(q,(0,start))

  while q:
    dist,now = heapq.heappop(q)
    if distance[now]< dist:
      continue
    for i in graph[now]:
      cost = i[1] + dist
      if cost < distance[i[0]]:
        distance[i[0]] = cost
        heapq.heappush(q,(cost,i[0]))


distra(c)
print(distance[d])
